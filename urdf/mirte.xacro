<?xml version="1.0"?>
<sdf xmlns:xacro="http://www.ros.org/wiki/xacro" version="1.9">
  <model name="mirte">
    <xacro:arg name="sonar_enable" default="false"/>
    <xacro:arg name="intensity_enable" default="false"/>
    <xacro:arg name="camera_enable" default="true"/>
    <xacro:arg name="lidar_enable" default="false"/>
    <xacro:arg name="realsense_enable" default="false"/>
    <!-- <xacro:include filename="$(find mirte_gazebo)/urdf/materials.xacro"/> -->
    <xacro:include filename="$(find mirte_gazebo)/urdf/macros.xacro"/>
    <!-- <xacro:include filename="$(find mirte_gazebo)/urdf/ros_control.xacro"/> -->
    <test value="$(arg sonar_enable)" name="sonar_enable"/>
    <test value="$(arg intensity_enable)" name="intensity_enable"/>
    <test value="$(arg camera_enable)" name="camera_enable"/>
    <test value="$(arg lidar_enable)" name="lidar_enable"/>
    <xacro:if value="$(arg lidar_enable)">
      <xacro:include filename="$(find mirte_gazebo)/urdf/lidar.xacro"/>
    </xacro:if>
    <xacro:if value="$(arg intensity_enable)">
      <xacro:include filename="$(find mirte_gazebo)/urdf/ir.xacro"/>
    </xacro:if>
    <!-- <xacro:if value="$(arg camera_enable)">
      <xacro:include filename="$(find mirte_gazebo)/urdf/camera.xacro"/>
    </xacro:if> -->
    <xacro:if value="$(arg sonar_enable)">
      <xacro:include filename="$(find mirte_gazebo)/urdf/ultrasonic.xacro"/>
    </xacro:if>
    <xacro:if value="$(arg realsense_enable)">
      <xacro:include filename="$(find mirte_gazebo)/urdf/realsense.xacro"/>
    </xacro:if>
    <xacro:property name="yaml_param_file" value="$(find mirte_gazebo)/config/mirte_dimensions.yaml"/>
    <xacro:property name="params" value="${xacro.load_yaml(yaml_param_file)}"/>
    <link name="link_chassis">
      <!-- pose and inertial -->
      <pose>0 0 0.015 0 0 0</pose>
      <xacro:inertia_box x="${params['base_len']}" y="${params['base_width']}" z="${params['base_height']}" mass="${params['base_mass']}">
        <origin>
          <rpy>0 0 0</rpy>
          <xyz>0 0 0.015</xyz>
        </origin>
      </xacro:inertia_box>
      <!-- body -->
      <collision name="collision_chassis">
        <geometry>
          <pose>0 0 1.57079633</pose>
          <mesh>
            <uri>file://$(find mirte_gazebo)/meshes/mirte_base.stl</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </collision>
      <visual name="mirte-base">
        <origin>
          <rpy>0 0 0</rpy>
          <xyz>0 0 0</xyz>
        </origin>
        <geometry>
          <pose>0 0 1.57079633</pose>
          <mesh>
            <uri>model://mirte_base/mirte_base.obj</uri>
            <color>0 0 1 1</color>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>

      </visual>
      <!-- <sensor name="chassis_contact_sensor" type="contact">
      <always_on>true</always_on>
      <update_rate>30.0</update_rate>
      <contact>
        <collision><name>base_link_fixed_joint_lump__collision_chassis_collision</name></collision>
        <!- - See https://github.com/gazebosim/sdformat/issues/333 for why the strange naming. Get the correct name by running xacro mirte.xacro > test.txt && gz sdf -p test.txt > robot.xml and look for the name- ->
      </contact>
      <!- - <plugin name="gripper_bumper" filename="libgazebo_ros_bumper.so">
        <bumperTopicName>contact</bumperTopicName>
        <frameName>link_chassis</frameName>
      </plugin> - ->
    </sensor> -->
    </link>
    <link name="base_link"/>
    <joint name="base_joint" type="fixed">
      <parent>base_link</parent>
      <child>link_chassis</child>
    </joint>
    <xacro:caster name="caster_wheel_back" parent="link_chassis" radius="${params['caster_wheel_radius']}" mass="${params['caster_wheel_mass']}">
      <pose>${params['caster_wheel_center_x_offset']} ${params['caster_wheel_center_y_offset']} ${params['caster_wheel_center_z_offset']} 0 0 0</pose>
    </xacro:caster>
    <!-- NOTE: xacro parser adds joint_ -->
    <xacro:wheel name="left_wheel" parent="link_chassis" radius="${params['wheel_radius']}" visualRot="1" mass="${params['wheel_mass']}" mult="-1">
      <pose>${params['wheel_center_x_offset']} ${params['wheel_center_y_offset']} ${params['wheel_center_z_offset']} ${pi/2} ${pi/2} 0</pose>
      <!-- <origin><rpy>0 0 0</rpy><xyz>${params['wheel_center_x_offset']} ${params['wheel_center_y_offset']} ${params['wheel_center_z_offset']}</xyz></origin> -->
      <joint_options>
        <limit effort="10" velocity="8"/>
        <dynamics damping="0.0" friction="0.0"/>
      </joint_options>
    </xacro:wheel>
    <!-- NOTE: xacro parser adds joint_ -->
    <xacro:wheel name="right_wheel" parent="link_chassis" radius="${params['wheel_radius']}" mass="${params['wheel_mass']}" visualRot="0" mult="1">
      <pose>${params['wheel_center_x_offset']} ${-1*params['wheel_center_y_offset']} ${params['wheel_center_z_offset']} ${pi/2} ${pi/2} ${pi}</pose>
      <!-- <origin><rpy>0 0 0</rpy><xyz></xyz></origin> -->
      <!-- <origin rpy="0 0 0" xyz="${params['wheel_center_x_offset']} ${-1*params['wheel_center_y_offset']} ${params['wheel_center_z_offset']}"/> -->
      <joint_options>
        <limit effort="10" velocity="8"/>
        <dynamics damping="0.0" friction="0.0"/>
      </joint_options>
    </xacro:wheel>
    <xacro:if value="$(arg sonar_enable)">
      <xacro:ultrasonic_sensor name="left">
        <origin rpy="0 0 .45" xyz="0.085 0.04 0.022"/>
      </xacro:ultrasonic_sensor>
      <xacro:ultrasonic_sensor name="right">
        <origin rpy="0 0 -0.45" xyz="0.085 -0.04 0.022"/>
      </xacro:ultrasonic_sensor>
    </xacro:if>
    <xacro:if value="$(arg intensity_enable)">
      <xacro:ir_sensor name="left">
        <origin rpy="0 ${radians(90)} 0" xyz="0.0785 0.022 0.002"/>
      </xacro:ir_sensor>
      <xacro:ir_sensor name="right">
        <origin rpy="0 ${radians(90)} 0" xyz="0.0785 -0.022 0.002"/>
      </xacro:ir_sensor>
    </xacro:if>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
  <!-- Remove <ros> tag. -->

  <!-- wheels -->
  <left_joint>joint_left_wheel</left_joint>
  <right_joint>joint_right_wheel</right_joint>

  <!-- kinematics -->
  <wheel_separation>0.14</wheel_separation>
  <wheel_radius>0.0325</wheel_radius> <!-- computed from <wheel_diameter> in the original plugin-->

  <!-- limits -->
  <max_linear_acceleration>1</max_linear_acceleration> <!-- computed from <max_linear_acceleration> in the original plugin-->

  <topic>cmd_vel</topic> <!-- from <commant_topic> -->

  <odom_topic>odom</odom_topic> <!-- from <odometry_topic> -->
  <frame_id>odom</frame_id> <!-- from <odometry_frame> -->
  <child_frame_id>base_footprint</child_frame_id> <!-- from <robot_base_frame> -->
  <odom_publisher_frequency>30</odom_publisher_frequency> <!-- from <update_rate>-->

  <tf_topic>/tf</tf_topic> <!-- Short topic name for tf output -->

</plugin>
    <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/mirte</robotNamespace>
      <!- - <parameters>$(find mirte_gazebo)/config/mirte_diff_drive.yaml</parameters> -->
    <!-- </plugin> -->
    <!-- <plugin name="gazebo_ros_controller_manager" filename="libgazebo_ros_controller_manager.so"/> - ->
  </gazebo> -->
    <!-- <xacro:include filename="$(find mirte_gazebo)/urdf/diffdrive.xacro"/>
  <gazebo>
    <plugin name="p3d" filename="libgazebo_ros_p3d.so">
      <!- -  <robotNamespace>/prius</robotNamespace> - ->
      <bodyName>base_link</bodyName>
      <topicName>base_pose_ground_truth</topicName>
      <frameName>map</frameName>
      <updateRate>10.0</updateRate>
    </plugin>
  </gazebo> -->
  </model>
</sdf>
